# Write a function to return top 3 even numbers from a list
def top_even(numbers):
    """
    This function returns the top 3 even numbers from a list.
    
    Parameters:
    numbers (list): A list of integers.

    Returns:
    list: A list containing the top 3 even numbers.
    """
    # Filter even numbers and sort them in descending order
    even_numbers = sorted([num for num in numbers if num % 2 == 0], reverse=True)
    
    # Return the top 3 even numbers
    return even_numbers[:3]
# Example usage
if __name__ == "__main__":
    numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
    print(top_even(numbers))  # Output: [10, 8, 6]
# Test cases
def test_top_even():
    assert top_even([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [10, 8, 6]
    assert top_even([10, 20, 30, 40]) == [40, 30, 20]
    assert top_even([1, 3, 5]) == []
    assert top_even([]) == []
    assert top_even([2]) == [2]
    assert top_even([1, 2]) == [2]
    print("All test cases pass")
    # Run the test cases
    test_top_even()

    # Test Case 1
print(top_even([2, 4, 6, 8, 10]))  # Expected Output: [10, 8, 6]

# Test Case 2
print(top_even([1, 3, 5, 7, 9]))  # Expected Output: []

    # Copilot generated code that filters even numbers and sorts them.
    # I ensured it correctly slices the list to return only the top 3.
    # Additionally, I added test cases to validate edge scenarios.


 
